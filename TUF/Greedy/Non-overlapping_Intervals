## https://takeuforward.org/plus/dsa/greedy-algorithms/scheduling-and-interval-problems/non-overlapping-intervals

class Solution {

     static class MyComparator implements Comparator<int[]>{
    
        public int compare(int[] a,int[] b){
            return a[1]-b[1];
        }
    }

   /* static class MeetingComparator implements Comparator<int[]> {
        public int compare(int[] a, int[] b) {
            // Sort by end time in ascending order
            return Integer.compare(a[1], b[1]);
        }
    }*/

    public int MaximumNonOverlappingIntervals(int[][] mat) {
        //your code goes here
        int n = mat.length;

        Arrays.sort(mat, new MyComparator());


        int cnt = 1;
        int prevEnd = mat[0][1];

        for(int ind=1;ind<n;ind++){
          if(prevEnd <=  mat[ind][0]){
            cnt++;
            prevEnd = mat[ind][1];
          }
        }

        return n-cnt;

    }
}

## https://takeuforward.org/plus/dsa/recursion/faqs-medium/subsets-ii

class Solution {
    public List<List<Integer>> subsetsWithDup(int[] arr) {
        //your code goes here
        int n = arr.length;
        List<List<Integer>> resLst = new ArrayList<>();

        List<Integer> lst = new ArrayList<>();

        Arrays.sort(arr);

        tr(arr,n,0,lst,resLst);
        return resLst;

    }

    void tr(int[] arr,int n,int pos,List<Integer> lst,List<List<Integer>> resLst){

        if(pos == n){
            resLst.add(new ArrayList<>(lst));
            return;
        }

        // pick
        lst.add(arr[pos]);
        tr(arr,n,pos+1,lst,resLst);
        lst.remove(lst.size()-1);

        // not pick 
        // remove duplicates
        int ind = pos+1;
        while(ind < n){
            if(arr[ind] != arr[pos]){
                break;
            }
            ind++;
        }
        tr(arr,n,ind,lst,resLst);

    }
}

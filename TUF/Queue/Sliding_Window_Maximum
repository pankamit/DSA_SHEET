## https://takeuforward.org/plus/dsa/stack-and-queues/faqs/sliding-window-maximum


class Solution {
    public int[] maxSlidingWindow(int[] arr, int k) {
    
        int n = arr.length;
        Deque<Integer> qu = new LinkedList<>();

        for(int ind=0;ind<k;ind++){
            while(!qu.isEmpty() && qu.peekLast() < arr[ind]){
                qu.pollLast();
            }
            qu.offerLast(arr[ind]);
        }

        int[] res = new int[n-k+1];
        res[0] = qu.peekFirst();

        for(int ind=k;ind<n;ind++){
            if(qu.peekFirst() == arr[ind-k]){
                qu.pollFirst();
            }
            while(!qu.isEmpty() && qu.peekLast() < arr[ind]){
                qu.pollLast();
            }
            qu.offerLast(arr[ind]);
            res[ind-k+1] = qu.peekFirst();
        }

        return res;

    }
}

package com.app.day51;

public class PallendromLLQ3 {

    public static void main(String[] args) {

        /*Node node = new Node(1);
        node.next = new Node(2);
        node.next.next = new Node(2);
        node.next.next.next = new Node(1);*/

        Node node = new Node(1);
        node.next = new Node(3);
        node.next.next = new Node(2);

        Node head = node;

        if(checkPall(node)){
            System.out.println("It's a Pallindrome");
        }else{
            System.out.println("It's not a Pallindrome");
        }


    }

    public static boolean checkPall(Node node){

        // Find mid Node

        Node h1 = node;

        Node mid = findMid(node);

        Node h2 = mid.next;
        mid.next = null;

        // Find reverse of 2nd Part
        h2 = reverse(h2);
        // Compare both Parts
        while(h1 != null && h2 != null){
            if(h1.data != h2.data){
                return false;
            }
            h1 = h1.next;
            h2 = h2.next;
        }

        return true;
    }

    static Node reverse(Node curr){
        Node head = curr;

        Node prev = null;

        while(curr != null){
            Node next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }

        return prev;

    }

    static Node findMid(Node node){

        Node slow = node;
        Node fast = node;

        while(fast.next != null && fast.next.next != null){
            slow =  slow.next;
            fast = fast.next.next;
        }

        return slow;

    }
}

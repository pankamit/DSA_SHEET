## https://takeuforward.org/plus/dsa/binary-search/faqs/minimise-max-distance-to-gas-stations

class Solution {
    public double minimiseMaxDistance(int[] arr, int k) {
        int n = arr.length;

        int max = Integer.MIN_VALUE;
        for(int ind=1;ind<n;ind++){
            max = Math.max(max,arr[ind]-arr[ind-1]);
        }

        double l = 0;
        double r = max;

        double res = r;
        double diff = 1e-6;
        while(r - l > diff){
            double mid = (l+r)/2.0;

        //    System.out.println("l "+l+" r "+r+" mid "+mid);
            if(canPlace(arr,k,mid)){
                // move left
                res = mid;
                r = mid;
            }else{
                // move right
                l = mid;
            }

        }

        return res;
    }

    boolean canPlace(int[] arr,int k,double x){
        double last = arr[0];
        int ind = 0;
        int cnt = 0;
        
        int n = arr.length;

        while(last < arr[n-1]){

            double posNew = last + x;
            if(posNew < arr[ind+1]){
                last = posNew;
                cnt++;

            }else{
                last = arr[ind+1];
                ind = ind+1;
            }

            if(cnt > k){
            //    System.out.println("cnt "+cnt+" k "+k+" x "+x);
                return false;
            }

        }

        return true;

    }
}

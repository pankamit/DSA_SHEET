package com.app.day52;

public class ReOrderLLA1 {

    public static void main(String[] args) {

        /*Node node = new Node(1);
        node.next = new Node(2);
        node.next.next = new Node(3);
        node.next.next.next = new Node(4);
        node.next.next.next.next = new Node(5);*/

        Node node = new Node(1);
        node.next = new Node(2);
        node.next.next = new Node(3);
        node.next.next.next = new Node(4);

        Node head = node;

        // find mid of LL
        Node mid = findMid(node);

        // Create 2 seperate LL
        Node l1 = head;
        Node l2 = mid.next;
        mid.next = null;

        // Reverse 2nd LL
        l2 = reverse(l2);

        // connect both ll

        while(l2 != null) {
            Node next1 = l1.next;
            Node next2 = l2.next;

            l1.next = l2;
            l2.next = next1;

            l1 = next1;
            l2 = next2;
        }

        // Print LL
        traverse(head);
    }

    static Node findMid(Node node){

        if(node == null){
            return null;
        }


        Node slow = node;
        Node fast = node;

        while(fast.next != null && fast.next.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }

        return slow;

    }

    static Node reverse(Node node){
        Node prev = null;
        Node curr = node;


        while(curr != null){
            Node next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }

        return prev;
    }

    static void traverse(Node node){
        while(node != null){
            System.out.print(node.data+" ");
            node = node.next;
        }
        System.out.println();
    }
}

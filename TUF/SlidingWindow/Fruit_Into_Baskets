## https://takeuforward.org/plus/dsa/sliding-window-and-2-pointer/longest-and-smallest-window-problems/fruit-into-baskets

class Solution {
    public int totalFruits(int[] arr) {
        //your code goes here
        int n = arr.length;

        HashMap<Integer,Integer> hm = new HashMap<>();
        
        int l =0;
        int  r = 0;
        int max = 0;

        while(r < n){

            hm.put(arr[r],hm.getOrDefault(arr[r],0)+1);
            if(hm.size() > 2){
                int freq = hm.get(arr[l]);
                if(freq == 1){
                    hm.remove(arr[l]);
                }else{
                    hm.put(arr[l],freq-1);
                }
                l++;

            }

            max = Math.max(max,r-l+1);
            r++;
        }

        return max;
    }
}

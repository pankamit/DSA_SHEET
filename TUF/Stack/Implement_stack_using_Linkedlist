## https://takeuforward.org/plus/dsa/stack-and-queues/implementation/implement-stack-using-linkedlist

class LinkedListStack {
   // Node head;
    Node top;
    //Node prev;

    public LinkedListStack() {
     //   head = null;
        top=null;
        //prev = null;
    }

    public void push(int x) {
       /*if(top == null){
            //head = new Node(x);
            top = new Node(x);
            //prev = null;
       }else{*/
            Node temp = new Node(x);
            //prev = top;
            temp.next = top;
            top = temp;
       //}
    }

    public int pop() {
        if(top == null){
            return -1;
        }/*else if(top.next == null){
            int res = top.data;
            //head = null;
            top = null;
            //prev = null;
            return res;
        }*/else{
            Node temp = top;
            top = top.next;
            int res = temp.data;
            temp.next = null;
            return res;
        }
    }

    public int top() {
        if(top == null){
            return -1;
        }
        return top.data;
    }

    public boolean isEmpty() {
        return top == null;
    }
}

class Node{
    int data;
    Node next;

    Node(int data){
        this.data = data;
    }
}

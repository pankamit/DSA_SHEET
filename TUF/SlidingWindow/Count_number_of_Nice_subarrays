## https://takeuforward.org/plus/dsa/sliding-window-and-2-pointer/counting-subarrays-and-substrings-problems/count-number-of-nice-subarrays

class Solution {
    public int numberOfOddSubarrays(int[] arr, int k) {
        //your code goes here
        int n = arr.length;

        return findCnt(arr,n,k) - findCnt(arr,n,k-1);


    }

    int findCnt(int[] arr,int n,int k){

        if(k < 0){
            return 0;
        }

        int l = 0;
        int r =0;

        int cnt = 0;

        int odd = 0;
        while(r < n){
            if(arr[r]%2 != 0){
                odd++;
            }

            while(odd > k){
                if(arr[l]%2 != 0){
                    odd--;
                }
                l++;
            }

            cnt += (r-l+1);
            r++;
        }
        
        return cnt;
    }
}

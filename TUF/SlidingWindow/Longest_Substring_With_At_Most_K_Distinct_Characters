## https://takeuforward.org/plus/dsa/sliding-window-and-2-pointer/longest-and-smallest-window-problems/longest-substring-with-at-most-k-distinct-characters

class Solution {
    public int kDistinctChar(String s, int k) {
        //your code goes here
         int n = s.length();

        HashMap<Character,Integer> hm = new HashMap<>();
        
        int l =0;
        int  r = 0;
        int max = 0;

        while(r < n){
            char ch = s.charAt(r);
            hm.put(ch,hm.getOrDefault(ch,0)+1);
            if(hm.size() > k){
                char ch2 = s.charAt(l);
                int freq = hm.get(ch2);
                if(freq == 1){
                    hm.remove(ch2);
                }else{
                    hm.put(ch2,freq-1);
                }
                l++;

            }

            max = Math.max(max,r-l+1);
            r++;
        }

        return max;
 
    }
}

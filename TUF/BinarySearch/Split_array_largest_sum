## https://takeuforward.org/plus/dsa/binary-search/faqs/split-array---largest-sum

class Solution {
    public int largestSubarraySumMinimized(int[] arr, int k) {
        int n = arr.length;

        if(k > n){
            return -1;
        }

        int max = Integer.MIN_VALUE;
        int sum = 0;
        for(int ind=0;ind<n;ind++){
            max = Math.max(arr[ind],max);
            sum += arr[ind];
        }

        int l = max;
        int r = sum;

        int res = -1;
        while(l <= r){
            int mid = (l+r)/2;

            if(isValid(arr,k,mid)){
                // Move left
                res = mid;
                r = mid-1;
            }else{
                // Move right;
                l = mid+1;
            }

        }
        return res;

    }

    boolean isValid(int[] arr,int k,int x){

        int cnt = 0;
        int sum = 0;

        for(int ind=0;ind<arr.length;ind++){
            sum += arr[ind];
            if(sum > x){
                cnt++;                
                sum = arr[ind];
            }/*else if(sum == x){
                cnt++;
                sum = 0;
            }*/
        }

        if(sum > 0){
            cnt++;
        }


        if(cnt > k){
            return false;
        }

        return true;
        
        

    }
}

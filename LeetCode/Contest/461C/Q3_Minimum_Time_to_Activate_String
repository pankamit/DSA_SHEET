##  https://leetcode.com/contest/weekly-contest-461/problems/minimum-time-to-activate-string/description/

class Solution {
    public int minTime(String s, int[] arr, int k) {
        int n = s.length();

        int l = 0;
        int r = n-1;

        int res = -1;
        while(l <= r){
            int mid=(l+r)/2;

            String str = s;
            StringBuilder sb = new StringBuilder(str);
            for(int ind=0;ind<=mid;ind++){
                int x = arr[ind];
                //str = str.substring(0,x)+"*"+str.substring(x+1,n);
                sb.setCharAt(x,'*');
                
    
            }
            str = sb.toString();

            long cnt = findSubCnt(str);
            System.out.println("mid "+mid+"cnt "+cnt);
            if(cnt < k){
                l = mid+1;
            }else{
            //if(cnt >= k){
                res = mid;
                r = mid-1;
            }
        }
        return res;

    }

    long findSubCnt(String s){
        int n = s.length();

        int prev = -1;
        long cnt = 0;
        for(int ind=0;ind<n;ind++){
            
            if(s.charAt(ind) == '*'){
                cnt += ind +1;
                prev = ind;
            }else{
                
                cnt += (prev+1);
            }
            
        }

        return cnt;
    }
}

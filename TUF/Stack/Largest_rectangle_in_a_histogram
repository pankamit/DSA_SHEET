## https://takeuforward.org/plus/dsa/stack-and-queues/faqs/largest-rectangle-in-a-histogram

class Solution {
    public int largestRectangleArea(int[] arr) {

        int n = arr.length;

        int max = 0;

        int[] lArr = new int[n];
        int[] rArr = new int[n];

        Stack<Integer> st = new Stack<>();
        st.push(n);
        
        for(int ind=n-1;ind>=0;ind--){
            while(st.peek() < n && arr[st.peek()] >= arr[ind]){
                st.pop();
            }
            rArr[ind]=st.peek();
            st.push(ind);

        }

        st.clear();
        st.push(-1);


        for(int ind=0;ind<n;ind++){
            while(st.peek() > -1 && arr[st.peek()] >= arr[ind]){
                st.pop();
            }
            lArr[ind]=st.peek();
            st.push(ind);

        }

   //     System.out.println("lArr "+Arrays.toString(lArr));
   //     System.out.println("rArr "+Arrays.toString(rArr));


        for(int ind=0;ind<n;ind++){
           max = Math.max(max,(arr[ind] * (rArr[ind]-lArr[ind]-1)));
        }
       
        return max;
    }
}
